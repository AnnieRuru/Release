//===== rAthena Script =======================================
//= Guess the password
//===== By: ==================================================
//= AnnieRuru
//===== Current Version: =====================================
//= 0.1
//===== Compatible With: ===================================== 
//= rAthena 2013-01-12
//===== Description: ========================================= 
//= GM setup the password chest, players guess and open it
//===== Topic ================================================
//= https://rathena.org/board/topic/77106-r-quess-the-password/?do=findComment&comment=171488
//===== Additional Comments: =================================
//= 
//============================================================

-	script	guess	-1,{
OnInit:
	.total_chest = 5; // guess how many chests

	setarray .town$,
		"prontera","izlude","morocc","geffen","payon","alberta","aldebaran","yuno","lighthalzen","einbroch","einbech","comodo","umbala","amatsu","gonryun","ayothaya","louyang","hugel","rachel","veins","brasilis","mora","dewata","malangdo","malaya";
	.town_size = getarraysize( .town$ );

	for ( .@i = 0; .@i < .total_chest; .@i++ ) {
		.id[ .@i ] = getnpcid( 0, "Guessing Chest No."+( .@i +1 )+"#"+( .@i +1 ) );
		disablenpc "Guessing Chest No."+( .@i +1 )+"#"+( .@i +1 );
	}
	end;

OnWhisperGlobal:
	if ( getgmlevel() < 60 ) end;
	else if ( compare( @whispervar0$, "on" ) || compare( @whispervar0$, "start" ) ) {
		if ( .start ) {
			dispbottom "the event is running";
			end;
		}
		else {
			deletearray .winner_name$;
			goto L_start;
		}
	}
	else if ( compare( @whispervar0$, "off" ) || compare( @whispervar0$, "end" ) ) {
		if ( !.start ) {
			dispbottom "event not yet start";
			end;
		}
		else
			goto L_end;
	}
	else {
		if ( !.start )
			dispbottom "event is not running";
		else {
			for ( .@i = 0; .@i < .total_chest; .@i++ )
				dispbottom "Chest #"+( .@i +1 )+" -> "+ .loc$[.@i] +"  |  pass : ["+ .pass$[.@i] +"]  "+ ( ( getstrlen( .winner_name$[.@i] ) )? "|  Winner : "+ .winner_name$[.@i] : "" );
		}
	}
	end;

L_start:
	mes "[Guess the password]";
	for ( .@i = 0; .@i < .total_chest; .@i++ ) {
		mes "Chest #"+( .@i +1 );
		mes "Location -> "+ ( getstrlen( .loc$[.@i] )? "^0000FF"+ .loc$[.@i] : "^FF0000Incomplete" ) +"^000000";
		mes "Hint -> "+ ( getstrlen( .hint$[.@i] )? "^0000FF"+ .hint$[.@i] : "^FF0000Incomplete" ) +"^000000";
		mes "Password -> "+ ( getstrlen( .pass$[.@i] )? "^0000FF"+ .pass$[.@i] : "^FF0000Incomplete" ) +"^000000";
		mes " ";
	}
	next;
	.@incomplete = 0;
	.@menu$ = "";
	for ( .@i = 0; .@i < .total_chest; .@i++ ) {
		.@menu$ = .@menu$ + "Location#"+( .@i +1 )+" -> "+ ( getstrlen( .loc$[.@i] )? "^0000FF"+ .loc$[.@i] : "^FF0000Incomplete" ) +"^000000:";
		.@menu$ = .@menu$ + "Hint#"+( .@i +1 )+" -> "+ ( getstrlen( .hint$[.@i] )? "^0000FF"+ .hint$[.@i] : "^FF0000Incomplete" ) +"^000000:";
		.@menu$ = .@menu$ + "Password#"+( .@i +1 )+" -> "+  ( getstrlen( .pass$[.@i] )? "^0000FF"+ .pass$[.@i] : "^FF0000Incomplete" ) +"^000000:";
		if ( !getstrlen( .loc$[.@i] ) || !getstrlen( .hint$[.@i] ) || !getstrlen( .pass$[.@i] ) )
			.@incomplete = .@i +1;
	}
	.@menu$ = .@menu$ + ( ( .@incomplete )? "^FF0000" : "^00CC00" ) +"Complete Setup";
	.@s = select( .@menu$ ) -1;
	.@id = .@s / 3;
	.@option = .@s % 3;
	mes "[Guess the password]";
	if ( .@s == .total_chest * 3 ) {
		for ( .@i = 0; .@i < .total_chest; .@i++ ) {
			if ( !getstrlen( .loc$[.@i] ) ) {
				mes "Chest #"+( .@i +1 )+" doesn't have a valid coordinate !";
				next;
				goto L_start;
			}
			if ( !getstrlen( .hint$[.@i] ) ) {
				mes "Chest #"+( .@i +1 )+" doesn't have a hint set !";
				next;
				goto L_start;
			}
			if ( !getstrlen( .pass$[.@i] ) ) {
				mes "Chest #"+( .@i +1 )+" doesn't have a password set !";
				next;
				goto L_start;
			}
		}
		if ( .start ) {
			mes "other GM has started the event before you";
			close;
		}
		announce strcharinfo(0) +" has started Guess The Password event", 0;
		for ( .@i = 0; .@i < .total_chest; .@i++ ) {
			enablenpc "Guessing Chest No."+( .@i +1 )+"#"+( .@i +1 );
			unitwarp .id[.@i], .@map$[.@i], .@x[.@i], .@y[.@i];
		}
		.start = 1;
		mes "Event start !";
		close;
	}
	mes "Chest #"+(.@id+1 );
	mes "Location -> "+ ( getstrlen( .loc$[.@id] )? "^0000FF"+ .loc$[.@id] : "^FF0000Incomplete" ) +"^000000";
	mes "Hint -> "+ ( getstrlen( .hint$[.@id] )? "^0000FF"+ .hint$[.@id] : "^FF0000Incomplete" ) +"^000000";
	mes "Password -> "+ ( getstrlen( .pass$[.@id] )? "^0000FF"+ .pass$[.@id] : "^FF0000Incomplete" ) +"^000000";
	if ( !.@option ) {
		mes " ";
		mes "   ##TIPS##";
		mes "input ^00CC00prontera 100 100^000000 to spawn at that location";
		mes " ";
		mes "input ^00CC00prontera^000000 to spawn at prontera and random coordinate";
		mes " ";
		mes "input ^00CC00town^000000 to spawn at randomize towns";
		next;
		if ( input( .@tmp$, 4, 21 ) ) {
			mes "[Guess the password]";
			mes "invalid string length";
			next;
			goto L_start;
		}
		else if ( sscanf( .@tmp$, "%15s %d %d", .@smap$, .@sx, .@sy ) == 3 ) {
			if ( ( .@sx || .@sy ) && checkcell( .@smap$, .@sx, .@sy, cell_chknopass ) ) {
				mes "[Guess the password]";
				mes "invalid coordinate";
				next;
				goto L_start;
			}
			else {
				.@map$[.@id] = .@smap$;
				.@x[.@id] = .@sx;
				.@y[.@id] = .@sy;
				.loc$[.@id] = .@map$[.@id] +" "+ .@x[.@id] +" "+ .@y[.@id];
			}
		}
		else if ( .@tmp$ == "town" ) {
			while ( checkcell( .@map$[.@id] = .town$[ rand( .town_size ) ], .@x[.@id] = rand(450), .@y[.@id] = rand(450), cell_chknopass ) );
			.loc$[.@id] = .@map$[.@id] +" "+ .@x[.@id] +" "+ .@y[.@id];
		}
		else if ( getmapusers( .@tmp$ ) == -1 ) {
			mes "[Guess the password]";
			mes "no such map";
			next;
			goto L_start;
		}
		else {
			.@map$[.@id] = .@tmp$;
			while ( checkcell( .@map$[.@id], .@x[.@id] = rand(450), .@y[.@id] = rand(450), cell_chknopass ) );
			.loc$[.@id] = .@map$[.@id] +" "+ .@x[.@id] +" "+ .@y[.@id];
		}
		goto L_start;
	}
	else if ( .@option == 1 ) {
		next;
		if ( input( .@tmp$, 2, 70 ) ) {
			mes "[Guess the password]";
			mes "invalid string length";
			next;
			goto L_start;
		}
		else if ( compare( .@tmp$, ":" ) ) {
			mes "[Guess the password]";
			mes "Hint must not allow to use these symbols";
			mes "-> : <- colon";
			next;
			goto L_start;
		}
		.hint$[.@id] = .@tmp$;
		goto L_start;
	}
	else {
		next;
		if ( input( .@tmp$, 2, 70 ) ) {
			mes "[Guess the password]";
			mes "invalid string length";
			next;
			goto L_start;
		}
		else if ( compare( .@tmp$, ":" ) || compare( .@tmp$, "^" ) ) {
			mes "[Guess the password]";
			mes "Password must not allow to use these symbols";
			mes "-> : <- colon";
			mes "-> ^ <- caret";
			next;
			goto L_start;
		}
		.pass$[.@id] = .@tmp$;
		goto L_start;
	}
	end; // shouldn't reach
L_end:
	for ( .@i = 0; .@i < .total_chest; .@i++ )
		disablenpc "Guessing Chest No."+( .@i +1 )+"#"+( .@i +1 );
	.start = 0;
	end;
}

-	script	Guessing Chest	-1,{
	.@name$ = strnpcinfo(1);
	.@id = atoi( strnpcinfo(2) ) -1;
	mes .@name$;
	mes "Hint :";
	mes "^0000FF"+ getvariableofnpc( .hint$[ .@id ], "guess" ) +"^000000";
	next;
	if ( input( .@tmp$, 2, 70 ) ) close;
	if ( .@tmp$ != getvariableofnpc( .pass$[ .@id ], "guess" ) ) {
		mes .@name$;
		mes "wrong password";
		close;
	}
	announce strcharinfo(0) +" has guess chest no."+ strnpcinfo(2) +" correctly", 0;
	set getvariableofnpc( .winner_name$[.@id], "guess" ), strcharinfo(0);
	while ( getstrlen( getvariableofnpc( .winner_name$[.@i], "guess" ) ) && .@i < getvariableofnpc( .total_chest, "guess" ) ) .@i++;
	if ( .@i == getvariableofnpc( .total_chest, "guess" ) ) {
		announce "Guess The Password event has ended", 0;
		set getvariableofnpc( .start, "guess" ), 0;
	}
	getitem 501, 1; // reward here
	disablenpc strnpcinfo(0);
	close;
}
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.1#1	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.2#2	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.3#3	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.4#4	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.5#5	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.6#6	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.7#7	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.8#8	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.9#9	1324
prontera,0,0,0	duplicate(Guessing Chest)	Guessing Chest No.10#10	1324